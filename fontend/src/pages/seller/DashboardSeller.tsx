import React, { useEffect, useState } from 'react';
import {
  Layout,
  Menu,
  Button,
  Typography,
  Space,
  Dropdown,
  Avatar,
  FloatButton,
  Card,
  Row,
  Col,
  Statistic,
  Badge,
  Alert,
  List,
  Spin
} from 'antd';
import {
  SettingOutlined,
  BoxPlotOutlined,
  BarChartOutlined,
  RiseOutlined,
  WalletOutlined,
  ShopOutlined,
  DollarOutlined,
  WarningOutlined,
  GiftOutlined,
  StarOutlined
} from '@ant-design/icons';
import axios from 'axios';

const { Title, Text } = Typography;

interface SellerStats {
  totalProducts: number;
  totalOrdersSold: number;
  todayRevenue: number;
  monthRevenue: number;
}
// Dashboard Component
const DashboardSeller: React.FC = () => {

  const [statistics, setStatistics] = useState<SellerStats | null>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetchSellerStatistics();
  }, []);

  const fetchSellerStatistics = async () => {
    try {
      const token = localStorage.getItem("authToken");

      if (!token) {
        console.error("No auth token found");
        setLoading(false);
        return;
      }

      // First get seller info to get sellerId
      const sellerResponse = await axios.get("https://localhost:7040/api/seller/me", {
        headers: { Authorization: `Bearer ${token}` }
      });

      const sellerId = sellerResponse.data?.sellerId;
      if (!sellerId) {
        console.error("No sellerId found");
        setLoading(false);
        return;
      }

      // Then get statistics using sellerId
      const statisticsResponse = await axios.get(`https://localhost:7040/api/statistics/seller/${sellerId}`, {
        headers: { Authorization: `Bearer ${token}` }
      });
      
      setStatistics(statisticsResponse.data);
    } catch (error) {
      console.error("Error fetching seller statistics:", error);
    } finally {
      setLoading(false);
    }
  };

  const shortcuts = [
    { key: 'my-products', label: 'S·∫£n ph·∫©m c·ªßa t√¥i', icon: <BoxPlotOutlined />, color: '#1890ff' },
    { key: 'my-categories', label: 'Danh m·ª•c Shop', icon: <ShopOutlined />, color: '#52c41a' },
    { key: 'my-sales', label: 'Doanh s·ªë c·ªßa t√¥i', icon: <BarChartOutlined />, color: '#fa8c16' },
    { key: 'marketing-center', label: 'Trung t√¢m Marketing', icon: <RiseOutlined />, color: '#13c2c2' },
    { key: 'my-income', label: 'Thu nh·∫≠p c·ªßa t√¥i', icon: <DollarOutlined />, color: '#722ed1' },
    { key: 'my-wallet', label: 'V√≠ c·ªßa t√¥i', icon: <WalletOutlined />, color: '#eb2f96' },
    { key: 'business-insights', label: 'Th√¥ng tin kinh doanh', icon: <BarChartOutlined />, color: '#f5222d' },
    { key: 'shop-settings', label: 'C√†i ƒë·∫∑t Shop', icon: <SettingOutlined />, color: '#666' }
  ];

  const todoItems = [
    { label: 'Ch∆∞a thanh to√°n', value: 0, color: '#ff4d4f' },
    { label: 'Ch·ªù x·ª≠ l√Ω v·∫≠n chuy·ªÉn', value: 1, color: '#fa8c16' },
    { label: 'ƒê√£ x·ª≠ l√Ω v·∫≠n chuy·ªÉn', value: 0, color: '#52c41a' },
    { label: 'Ch·ªù tr·∫£ h√†ng/Ho√†n ti·ªÅn', value: 15, color: '#1890ff' }
  ];

  const todoItems2 = [
    { label: 'Ch·ªù h·ªßy ƒë∆°n', value: 0, color: '#ff4d4f' },
    { label: 'S·∫£n ph·∫©m b·ªã c·∫•m', value: 2, color: '#fa8c16' },
    { label: 'S·∫£n ph·∫©m h·∫øt h√†ng', value: 0, color: '#52c41a' },
    { label: 'Ch·ªù chi·∫øn d·ªãch', value: 0, color: '#1890ff', badge: true }
  ];

  const shopeeEvents = [
    {
      title: "Cu·ªôc thi Ng∆∞·ªùi b√°n @ShopeeBestDeals",
      description: "Th·∫Øng g√≥i qu√† 20.000.000‚Ç´ d√†nh cho Ng∆∞·ªùi b√°n! üéÅ ƒê·ªÉ tham gia, ch·ªâ c·∫ßn Chia s·∫ª c√°c deal t·ªët nh·∫•t c·ªßa b·∫°n tr√™n Shopee Stories! Tham gia Cu·ªôc thi Ng∆∞·ªùi b√°n @ShopeeBestDeals ngay! T·ª´ 18/8 ƒë·∫øn 24/8! T√¨m hi·ªÉu th√™m üëâ",
      type: "competition",
      date: "M·ªõi"
    },
    {
      title: "Ch∆∞∆°ng tr√¨nh Seller Spotlight",
      description: "Nh·∫≠n ƒë∆∞·ª£c s·ª± ch√∫ √Ω t·ª´ 27 tri·ªáu ng∆∞·ªùi theo d√µi ƒë·ªÉ c√≥ th√™m ƒë∆°n h√†ng v√† nhi·ªÅu ng∆∞·ªùi theo d√µi h∆°n th√¥ng qua Ch∆∞∆°ng tr√¨nh Seller Spotlight t·ª´ 3/8 ƒë·∫øn 30/8! üöÄ",
      type: "promo",
      date: "5 Th√°ng 8, 2024"
    }
  ];

  return (
    <>
      {/* Banner */}


      <Row gutter={[24, 24]}>
        <Col span={18}>
          {/* To Do List */}
          <Card title="Danh s√°ch c·∫ßn l√†m" style={{ marginBottom: 24 }}>
            <Text type="secondary">Nh·ªØng vi·ªác b·∫°n c·∫ßn x·ª≠ l√Ω</Text>
            <Row gutter={[16, 16]} style={{ marginTop: 16 }}>
              {todoItems.map((item, index) => (
                <Col span={6} key={index}>
                  <Card 
                    hoverable 
                    style={{ textAlign: 'center', border: `1px solid ${item.color}20` }}
                  >
                    <Statistic 
                      title={item.label} 
                      value={item.value} 
                      valueStyle={{ color: item.color, fontSize: '32px', fontWeight: 'bold' }}
                    />
                  </Card>
                </Col>
              ))}
            </Row>
            <Row gutter={[16, 16]} style={{ marginTop: 16 }}>
              {todoItems2.map((item, index) => (
                <Col span={6} key={index}>
                  <Card 
                    hoverable 
                    style={{ textAlign: 'center', border: `1px solid ${item.color}20` }}
                  >
                    <Statistic 
                      title={item.label} 
                      value={item.value} 
                      valueStyle={{ color: item.color, fontSize: '32px', fontWeight: 'bold' }}
                    />
                    {item.badge && (
                      <Badge 
                        count="HOT" 
                        style={{ 
                          backgroundColor: '#ff4d4f',
                          position: 'absolute',
                          top: 8,
                          right: 8
                        }} 
                      />
                    )}
                  </Card>
                </Col>
              ))}
            </Row>
          </Card>

          {/* Business Insights */}
          <Card 
            title="Th√¥ng tin kinh doanh" 
            extra={
              <Button type="link" style={{ color: '#1890ff' }}>
                Xem th√™m ‚Üí
              </Button>
            }
            style={{ marginBottom: 24 }}
          >
            <Text type="secondary">
              D·ªØ li·ªáu th·ªùi gian th·ª±c ƒë·∫øn GMT+7 13:00 | T·ªïng quan d·ªØ li·ªáu shop cho ƒë∆°n h√†ng ƒë√£ ƒë·∫∑t
            </Text>
             {loading ? (
              <div style={{ textAlign: 'center', padding: '50px' }}>
                <Spin size="large" />
              </div>
            ) : (
              <Row gutter={[24, 24]} style={{ marginTop: 16 }}>
                <Col span={6}>
                  <Statistic 
                    title="T·ªïng s·∫£n ph·∫©m" 
                    value={statistics?.totalProducts || 0} 
                    valueStyle={{ color: '#1890ff' }}
                  />
                </Col>
                <Col span={6}>
                  <Statistic 
                    title="ƒê∆°n h√†ng ƒë√£ b√°n" 
                    value={statistics?.totalOrdersSold || 0}
                    valueStyle={{ color: '#52c41a' }}
                  />
                </Col>
                <Col span={6}>
                  <Statistic 
                    title="Doanh thu h√¥m nay" 
                    value={statistics?.todayRevenue || 0} 
                    suffix="ƒë"
                    precision={0}
                    valueStyle={{ color: '#fa8c16' }}
                  />
                </Col>
                <Col span={6}>
                  <Statistic 
                    title="Doanh thu th√°ng n√†y" 
                    value={statistics?.monthRevenue || 0} 
                    suffix="ƒë"
                    precision={0}
                    valueStyle={{ color: '#722ed1' }}
                  />
                </Col>
              </Row>
            )}
          </Card>

          

          {/* Marketing Center */}
          <Card 
            title="Trung t√¢m Marketing" 
            extra={
              <Button type="link" style={{ color: '#1890ff' }}>
                Xem th√™m ‚Üí
              </Button>
            }
            style={{ marginBottom: 24 }}
          >
            <Text type="secondary">C√¥ng c·ª• Marketing & C∆° ch·∫ø Khuy·∫øn m√£i</Text>
            <Alert
              message="S·ªë d∆∞ qu·∫£ng c√°o c·ªßa b·∫°n ƒë√£ gi·∫£m xu·ªëng 0.13‚Ç´ - vui l√≤ng n·∫°p th√™m"
              type="warning"
              showIcon
              closable
              style={{ marginTop: 16 }}
              icon={<WarningOutlined />}
            />
          </Card>

          {/* Shopee Events */}
          <Card title="S·ª± ki·ªán Shopee" style={{ marginBottom: 24 }}>
            <List
              dataSource={shopeeEvents}
              renderItem={(item) => (
                <List.Item>
                  <List.Item.Meta
                    avatar={
                      <Avatar 
                        icon={item.type === 'competition' ? <GiftOutlined /> : <StarOutlined />} 
                        style={{ backgroundColor: item.type === 'competition' ? '#52c41a' : '#1890ff' }}
                      />
                    }
                    title={
                      <div>
                        <Text strong>{item.title}</Text>
                        <Badge 
                          count={item.date} 
                          style={{ 
                            backgroundColor: item.date === 'M·ªõi' ? '#f50' : '#108ee9',
                            marginLeft: 8
                          }} 
                        />
                      </div>
                    }
                    description={
                      <Text type="secondary" style={{ fontSize: '12px' }}>
                        {item.description}
                      </Text>
                    }
                  />
                </List.Item>
              )}
            />
          </Card>
        </Col>

        <Col span={6}>
          {/* Shortcuts */}
          <Card title="L·ªëi t·∫Øt" style={{ marginBottom: 24 }}>
            <Row gutter={[8, 8]}>
              {shortcuts.slice(0, 6).map((shortcut, index) => (
                <Col span={12} key={index}>
                  <Button
                    type="text"
                    style={{
                      width: '100%',
                      height: '80px',
                      display: 'flex',
                      flexDirection: 'column',
                      alignItems: 'center',
                      justifyContent: 'center',
                      border: '1px solid #f0f0f0',
                      borderRadius: '8px'
                    }}
                  >
                    <div 
                      style={{
                        width: '40px',
                        height: '40px',
                        borderRadius: '50%',
                        backgroundColor: shortcut.color,
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        color: 'white',
                        fontSize: '16px',
                        marginBottom: '8px'
                      }}
                    >
                      {shortcut.icon}
                    </div>
                    <Text style={{ fontSize: '11px', textAlign: 'center' }}>
                      {shortcut.label}
                    </Text>
                  </Button>
                </Col>
              ))}
            </Row>
          </Card>

          {/* Notifications */}
          <Card title="Th√¥ng b√°o" style={{ marginBottom: 24 }}>
            <Space direction="vertical" style={{ width: '100%' }}>
              <Alert
                message="Nh·∫Øc nh·ªü d√πng th·ª≠ mi·ªÖn ph√≠"
                description="C√≤n l·∫°i 5 ng√†y d√πng th·ª≠ mi·ªÖn ph√≠ Ch∆∞∆°ng tr√¨nh Mi·ªÖn ph√≠ v·∫≠n chuy·ªÉn"
                type="info"
                showIcon
                style={{ fontSize: '12px' }}
              />
              <Alert
                message="Th√¥ng b√°o cu·ªôc thi"
                description="Cu·ªôc thi Ng∆∞·ªùi b√°n @ShopeeBestDeals - Th·∫Øng g√≥i qu√† 20.000.000‚Ç´!"
                type="success"
                showIcon
                style={{ fontSize: '12px' }}
              />
            </Space>
          </Card>
        </Col>
      </Row>
    </>
  );
};

export default DashboardSeller;